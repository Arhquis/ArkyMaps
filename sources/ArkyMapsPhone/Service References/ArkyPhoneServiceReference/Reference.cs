//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace ArkyMapsPhone.ArkyPhoneServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LonLat", Namespace="ArkyMaps.com/PhoneService")]
    public partial class LonLat : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double LatitudeField;
        
        private double LongitudeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="ArkyMaps.com/PhoneService", ConfigurationName="ArkyPhoneServiceReference.IPhoneService")]
    public interface IPhoneService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="ArkyMaps.com/PhoneService/IPhoneService/Login", ReplyAction="ArkyMaps.com/PhoneService/IPhoneService/LoginResponse")]
        System.IAsyncResult BeginLogin(string username, string password, System.AsyncCallback callback, object asyncState);
        
        long EndLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="ArkyMaps.com/PhoneService/IPhoneService/NewLocation", ReplyAction="ArkyMaps.com/PhoneService/IPhoneService/NewLocationResponse")]
        System.IAsyncResult BeginNewLocation(long userId, ArkyMapsPhone.ArkyPhoneServiceReference.LonLat location, System.AsyncCallback callback, object asyncState);
        
        void EndNewLocation(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPhoneServiceChannel : ArkyMapsPhone.ArkyPhoneServiceReference.IPhoneService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PhoneServiceClient : System.ServiceModel.ClientBase<ArkyMapsPhone.ArkyPhoneServiceReference.IPhoneService>, ArkyMapsPhone.ArkyPhoneServiceReference.IPhoneService {
        
        private BeginOperationDelegate onBeginLoginDelegate;
        
        private EndOperationDelegate onEndLoginDelegate;
        
        private System.Threading.SendOrPostCallback onLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginNewLocationDelegate;
        
        private EndOperationDelegate onEndNewLocationDelegate;
        
        private System.Threading.SendOrPostCallback onNewLocationCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public PhoneServiceClient() {
        }
        
        public PhoneServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PhoneServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PhoneServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PhoneServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<LoginCompletedEventArgs> LoginCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> NewLocationCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ArkyMapsPhone.ArkyPhoneServiceReference.IPhoneService.BeginLogin(string username, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogin(username, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        long ArkyMapsPhone.ArkyPhoneServiceReference.IPhoneService.EndLogin(System.IAsyncResult result) {
            return base.Channel.EndLogin(result);
        }
        
        private System.IAsyncResult OnBeginLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((ArkyMapsPhone.ArkyPhoneServiceReference.IPhoneService)(this)).BeginLogin(username, password, callback, asyncState);
        }
        
        private object[] OnEndLogin(System.IAsyncResult result) {
            long retVal = ((ArkyMapsPhone.ArkyPhoneServiceReference.IPhoneService)(this)).EndLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoginCompleted(object state) {
            if ((this.LoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginCompleted(this, new LoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginAsync(string username, string password) {
            this.LoginAsync(username, password, null);
        }
        
        public void LoginAsync(string username, string password, object userState) {
            if ((this.onBeginLoginDelegate == null)) {
                this.onBeginLoginDelegate = new BeginOperationDelegate(this.OnBeginLogin);
            }
            if ((this.onEndLoginDelegate == null)) {
                this.onEndLoginDelegate = new EndOperationDelegate(this.OnEndLogin);
            }
            if ((this.onLoginCompletedDelegate == null)) {
                this.onLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginCompleted);
            }
            base.InvokeAsync(this.onBeginLoginDelegate, new object[] {
                        username,
                        password}, this.onEndLoginDelegate, this.onLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ArkyMapsPhone.ArkyPhoneServiceReference.IPhoneService.BeginNewLocation(long userId, ArkyMapsPhone.ArkyPhoneServiceReference.LonLat location, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNewLocation(userId, location, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void ArkyMapsPhone.ArkyPhoneServiceReference.IPhoneService.EndNewLocation(System.IAsyncResult result) {
            base.Channel.EndNewLocation(result);
        }
        
        private System.IAsyncResult OnBeginNewLocation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long userId = ((long)(inValues[0]));
            ArkyMapsPhone.ArkyPhoneServiceReference.LonLat location = ((ArkyMapsPhone.ArkyPhoneServiceReference.LonLat)(inValues[1]));
            return ((ArkyMapsPhone.ArkyPhoneServiceReference.IPhoneService)(this)).BeginNewLocation(userId, location, callback, asyncState);
        }
        
        private object[] OnEndNewLocation(System.IAsyncResult result) {
            ((ArkyMapsPhone.ArkyPhoneServiceReference.IPhoneService)(this)).EndNewLocation(result);
            return null;
        }
        
        private void OnNewLocationCompleted(object state) {
            if ((this.NewLocationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NewLocationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NewLocationAsync(long userId, ArkyMapsPhone.ArkyPhoneServiceReference.LonLat location) {
            this.NewLocationAsync(userId, location, null);
        }
        
        public void NewLocationAsync(long userId, ArkyMapsPhone.ArkyPhoneServiceReference.LonLat location, object userState) {
            if ((this.onBeginNewLocationDelegate == null)) {
                this.onBeginNewLocationDelegate = new BeginOperationDelegate(this.OnBeginNewLocation);
            }
            if ((this.onEndNewLocationDelegate == null)) {
                this.onEndNewLocationDelegate = new EndOperationDelegate(this.OnEndNewLocation);
            }
            if ((this.onNewLocationCompletedDelegate == null)) {
                this.onNewLocationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNewLocationCompleted);
            }
            base.InvokeAsync(this.onBeginNewLocationDelegate, new object[] {
                        userId,
                        location}, this.onEndNewLocationDelegate, this.onNewLocationCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override ArkyMapsPhone.ArkyPhoneServiceReference.IPhoneService CreateChannel() {
            return new PhoneServiceClientChannel(this);
        }
        
        private class PhoneServiceClientChannel : ChannelBase<ArkyMapsPhone.ArkyPhoneServiceReference.IPhoneService>, ArkyMapsPhone.ArkyPhoneServiceReference.IPhoneService {
            
            public PhoneServiceClientChannel(System.ServiceModel.ClientBase<ArkyMapsPhone.ArkyPhoneServiceReference.IPhoneService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginLogin(string username, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = username;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("Login", _args, callback, asyncState);
                return _result;
            }
            
            public long EndLogin(System.IAsyncResult result) {
                object[] _args = new object[0];
                long _result = ((long)(base.EndInvoke("Login", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginNewLocation(long userId, ArkyMapsPhone.ArkyPhoneServiceReference.LonLat location, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userId;
                _args[1] = location;
                System.IAsyncResult _result = base.BeginInvoke("NewLocation", _args, callback, asyncState);
                return _result;
            }
            
            public void EndNewLocation(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("NewLocation", _args, result);
            }
        }
    }
}
